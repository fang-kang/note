import{_ as a,a as t,o as e,aR as s}from"./chunks/framework.kUD5hkPg.js";const i="/note/assets/03.Boa6AKct.png",o="/note/assets/04.B8oxl8sm.png",n="/note/assets/05.BsWPTCyQ.png",r="/note/assets/06.-akjrRVG.png",l="/note/assets/07.DowrUp7o.png",p="/note/assets/08.ByBMMy7E.png",c="/note/assets/09.D4tHRNff.png",h="/note/assets/10.DOKXhpDM.png",g="/note/assets/11.D--lYKcx.png",d="/note/assets/12.CD_McOGO.png",_="/note/assets/13.uVixHZle.png",q=JSON.parse('{"title":"TortoiseGit clone 项目时报错","description":"","frontmatter":{},"headers":[],"relativePath":"articles/05-问题/日常踩坑/TortoiseGit clone 项目时报错.md","filePath":"articles/05-问题/日常踩坑/TortoiseGit clone 项目时报错.md"}'),m={name:"articles/05-问题/日常踩坑/TortoiseGit clone 项目时报错.md"},y=s('<h1 id="tortoisegit-clone-项目时报错" tabindex="-1">TortoiseGit clone 项目时报错 <a class="header-anchor" href="#tortoisegit-clone-项目时报错" aria-label="Permalink to &quot;TortoiseGit clone 项目时报错&quot;">​</a></h1><h2 id="_1-问题描述" tabindex="-1">1.问题描述 <a class="header-anchor" href="#_1-问题描述" aria-label="Permalink to &quot;1.问题描述&quot;">​</a></h2><p>使用 TortoiseGit 工具将 gitee 项目 clone 到本地目录时出现异常</p><h2 id="_2-报错信息" tabindex="-1">2.报错信息 <a class="header-anchor" href="#_2-报错信息" aria-label="Permalink to &quot;2.报错信息&quot;">​</a></h2><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> supported</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> authentication</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> methods</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> available</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (server </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sent:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publickey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+i+'" alt="img" data-fancybox="gallery"></p><h2 id="_3-解决办法" tabindex="-1">3.解决办法 <a class="header-anchor" href="#_3-解决办法" aria-label="Permalink to &quot;3.解决办法&quot;">​</a></h2><h3 id="_3-1-使用-puttygen-生成-key-公钥" tabindex="-1">3.1 使用 puttygen 生成 key 公钥 <a class="header-anchor" href="#_3-1-使用-puttygen-生成-key-公钥" aria-label="Permalink to &quot;3.1 使用 puttygen 生成 key 公钥&quot;">​</a></h3><p><img src="'+o+'" alt="img" data-fancybox="gallery"></p><h3 id="_3-2-点击-generate-生成公钥和私钥" tabindex="-1">3.2 点击 generate 生成公钥和私钥 <a class="header-anchor" href="#_3-2-点击-generate-生成公钥和私钥" aria-label="Permalink to &quot;3.2 点击 generate 生成公钥和私钥&quot;">​</a></h3><p><img src="'+n+'" alt="img" data-fancybox="gallery"></p><p>执行一段时间之后如下</p><p><img src="'+r+'" alt="img" data-fancybox="gallery"></p><p>保存公钥和私钥到本地</p><p><img src="'+l+'" alt="img" data-fancybox="gallery"></p><p>我保存的位置</p><p><img src="'+p+'" alt="img" data-fancybox="gallery"></p><p>将公钥放到 git 账号上，路径：账号 →settings→SSH and GPG keys</p><p><img src="'+c+'" alt="img" data-fancybox="gallery"></p><p>执行 Add SSH key</p><p><img src="'+h+'" alt="img" data-fancybox="gallery"></p><h3 id="_3-3-使用-pageant-程序配置私钥" tabindex="-1">3.3 使用 Pageant 程序配置私钥 <a class="header-anchor" href="#_3-3-使用-pageant-程序配置私钥" aria-label="Permalink to &quot;3.3 使用 Pageant 程序配置私钥&quot;">​</a></h3><p>运行 TortoiseGit 开始菜单中的 Pageant 程序，程序启动后将自动停靠在任务栏中，在任务栏中双击打开。</p><p>点击“Add Key”按钮，添加之前保存的私钥（.ppk），然后点击“Close”即可。它会默认在后台挂载私钥，如果程序退出，配置就会失效。</p><p><img src="'+g+'" alt="img" data-fancybox="gallery"></p><p>再执行 git 操作的时候，就不会报错了。</p><h3 id="_3-4-在设置中配置私钥-永久有效" tabindex="-1">3.4 在设置中配置私钥，永久有效 <a class="header-anchor" href="#_3-4-在设置中配置私钥-永久有效" aria-label="Permalink to &quot;3.4 在设置中配置私钥，永久有效&quot;">​</a></h3><p>在本地项目文件夹上右键，TortoiseGit -》Settings -》Git -》 Remote，在 Putty Key 后选择刚才保存到本地的私钥，然后点击应用即可。</p><p><img src="'+d+'" alt="img" data-fancybox="gallery"></p><p>在 Pull 或 Push 项目的时候，记得勾选 Autoload Putty Key 选项。</p><p><img src="'+_+'" alt="img" data-fancybox="gallery"></p><p>最后就可以使用 TortoiseGit 可视化提交工具进行代码拉取提交等一系列操作了。</p>',32),k=[y];function u(b,f,x,P,F,T){return e(),t("div",null,k)}const G=a(m,[["render",u]]);export{q as __pageData,G as default};
