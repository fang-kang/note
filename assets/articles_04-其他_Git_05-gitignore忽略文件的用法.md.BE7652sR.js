import{_ as s,a as i,o as a,aR as e}from"./chunks/framework.kUD5hkPg.js";const b=JSON.parse('{"title":".gitignore 忽略文件的用法","description":"","frontmatter":{},"headers":[],"relativePath":"articles/04-其他/Git/05-gitignore忽略文件的用法.md","filePath":"articles/04-其他/Git/05-gitignore忽略文件的用法.md"}'),n={name:"articles/04-其他/Git/05-gitignore忽略文件的用法.md"},t=e(`<h1 id="gitignore-忽略文件的用法" tabindex="-1">.gitignore 忽略文件的用法 <a class="header-anchor" href="#gitignore-忽略文件的用法" aria-label="Permalink to &quot;.gitignore 忽略文件的用法&quot;">​</a></h1><h2 id="_1-git-忽略文件-gitignore-详解" tabindex="-1">1.Git 忽略文件 <code>.gitignore</code> 详解 <a class="header-anchor" href="#_1-git-忽略文件-gitignore-详解" aria-label="Permalink to &quot;1.Git 忽略文件 \`.gitignore\` 详解&quot;">​</a></h2><p>在工程中，并不是所有文件都需要保存到版本库中的，例如<code>dist</code>目录及目录下的文件就可以忽略。在 <code>Git</code> 工作区的根目录下创建一个特殊的 <code>.gitignore</code> 文件，然后把要忽略的文件名填进去，<code>Git</code> 就会自动忽略这些文件或目录。</p><h2 id="_2-忽略语法" tabindex="-1">2.忽略语法 <a class="header-anchor" href="#_2-忽略语法" aria-label="Permalink to &quot;2.忽略语法&quot;">​</a></h2><p>1.注释使用#开头，后面跟注释内容</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注释</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.! 开头的模式表示反向操作，该文件将会再次被包含，如果忽略了该文件的父级目录，则使用 ! 也不会使该文件再次被包含</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/run.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    表示不忽略bin目录下的run.sh文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3./ 结束的模式只匹配文件夹以及在该文件夹路径下的内容，但是不匹配该文件</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          表示忽略</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/目录下的所有文件，过滤整个build文件夹</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>4./ 开始的模式匹配项目根目录</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/TODO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           表示仅仅忽略项目根目录下的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TODO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件，不包括</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subdir/TODO</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>5.如果一个模式不包含斜杠，则它匹配相对于当前 .gitignore 文件路径的内容（目录和文件），如果该模式不在 .gitignore 文件中，则相对于项目根目录</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config.php:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     表示忽略当前路径的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>6.** 匹配多级目录，可在开始，中间，结束</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/foo:         表示忽略/foo,a/foo,a/b/foo等</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a/**/b:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         表示忽略a/b,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a/x/b,a/x/y/b等</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>7.? 通用匹配单个字符</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.log.    表示忽略所有 1.log 文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>8.* 通用匹配零个或多个字符</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">doc/*.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       表示会忽略doc/notes.txt但不包括</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doc/server/arch.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/*.c:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           表示忽略cat.c，不忽略</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/cat.c</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.log:          表示忽略所有 .log 文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>9.[] 通用匹配单个字符列表</p><h2 id="_3-已被推送过的文件" tabindex="-1">3.已被推送过的文件 <a class="header-anchor" href="#_3-已被推送过的文件" aria-label="Permalink to &quot;3.已被推送过的文件&quot;">​</a></h2><p>已经推送（push）过的文件，在.gitignore 文件内添加是无效的。可以使用以下命令进行强制忽略。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update-index</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --assume-unchanged</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件路径</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>取消强制忽略：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update-index</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-assume-unchanged</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件路径</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_4-参考链接" tabindex="-1">4.参考链接 <a class="header-anchor" href="#_4-参考链接" aria-label="Permalink to &quot;4.参考链接&quot;">​</a></h2><ul><li><p><a href="https://www.cnblogs.com/kevingrace/p/5690241.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/kevingrace/p/5690241.html</a></p></li><li><p><a href="https://blog.csdn.net/fox9916/article/details/127924115" target="_blank" rel="noreferrer">https://blog.csdn.net/fox9916/article/details/127924115</a></p></li></ul>`,28),l=[t];function p(h,r,d,o,c,k){return a(),i("div",null,l)}const u=s(n,[["render",p]]);export{b as __pageData,u as default};
