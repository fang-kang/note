import{_ as s,a,o as i,aR as n}from"./chunks/framework.kUD5hkPg.js";const E=JSON.parse('{"title":"11.缓存","description":"","frontmatter":{},"headers":[],"relativePath":"articles/02-后端/Java/04-MyBatis/11.缓存.md","filePath":"articles/02-后端/Java/04-MyBatis/11.缓存.md"}'),l={name:"articles/02-后端/Java/04-MyBatis/11.缓存.md"},e=n(`<h1 id="_11-缓存" tabindex="-1">11.缓存 <a class="header-anchor" href="#_11-缓存" aria-label="Permalink to &quot;11.缓存&quot;">​</a></h1><h2 id="_1-简介" tabindex="-1">1.简介 <a class="header-anchor" href="#_1-简介" aria-label="Permalink to &quot;1.简介&quot;">​</a></h2><ol><li>什么是缓存 [ Cache ] ? <ul><li>存在内存中的临时数据</li><li>将用户经常查询的数据放在缓存（内存）中，用户查询数据就不用从数据库中查询，从缓存中查询，从而提高查询小龙，解决了高并发系统的性能问题。</li></ul></li><li>为什么使用缓存 <ul><li>减少和数据库的交互次数，减少系统开销，提高系统效率</li></ul></li><li>什么样的数据能使用缓存？ <ul><li>经常查询并且不经常改变的数据</li></ul></li></ol><h2 id="_2-mybatis-缓存" tabindex="-1">2.MyBatis 缓存 <a class="header-anchor" href="#_2-mybatis-缓存" aria-label="Permalink to &quot;2.MyBatis 缓存&quot;">​</a></h2><ul><li>MyBatis 包含一个非常强大的查询缓存特性，它可以非常方便地定制和配置缓存。缓存可以极大的提升查询效率。</li><li>MyBatis 系统中默认定义了两个缓存：<strong>一级缓存</strong>和<strong>二级缓存</strong><ul><li>默认情况下，只有一级缓存开启。（SqlSession 级别的缓存，也称为本地缓存）</li><li>二级缓存需要手动开启和配置，他是基于 namespace 级别的缓存。</li><li>为了提高拓展性，MyBatis 定义了缓存接口 Cache。我们可以通过实现 Cache 接口来定义二级缓存</li></ul></li></ul><h2 id="_3-一级缓存" tabindex="-1">3.一级缓存 <a class="header-anchor" href="#_3-一级缓存" aria-label="Permalink to &quot;3.一级缓存&quot;">​</a></h2><ul><li>一级缓存也叫本地缓存 <ul><li>与数据库同一次会话期间查询到的数据会放在本地缓存中</li><li>以后如果需要获取相同的数据，直接从缓存中拿，没必要再取查询数据库</li></ul></li></ul><h2 id="_4-二级缓存" tabindex="-1">4.二级缓存 <a class="header-anchor" href="#_4-二级缓存" aria-label="Permalink to &quot;4.二级缓存&quot;">​</a></h2><ul><li>二级缓存也叫全局缓存，一级缓存作用域太低了，所有诞生了二级缓存</li><li>基于 namespace 级别的缓存，一个名称空间对应一个二级缓存</li><li>工作机制 <ul><li>一个会话查询一条数据，这个数据会被放到当前会话的一级缓存中；</li><li>如果当前会话关闭了，这个会话对应的一级缓存就没了；但是我们开启了二级缓存，会话关闭了，一级缓存中的数据会被保存到二级缓存中；</li><li>新的会话查询信息，就可以从二级缓存中获取内容</li><li>不同的 mapper 查出的数据会放再自己对应的缓存中</li></ul></li></ul><h2 id="_5-缓存失效的情况" tabindex="-1">5.缓存失效的情况 <a class="header-anchor" href="#_5-缓存失效的情况" aria-label="Permalink to &quot;5.缓存失效的情况&quot;">​</a></h2><ul><li>不同的 SqlSession 对应不同的一级缓存</li><li>同一个 SqlSession 但是查询条件不同</li><li>一个 SqlSession 两次查询期间执行了任何一次增删改操作</li><li>同一个 SqlSession 两次查询期间手动清空了缓存</li></ul><h2 id="_6-二级缓存的使用" tabindex="-1">6.二级缓存的使用 <a class="header-anchor" href="#_6-二级缓存的使用" aria-label="Permalink to &quot;6.二级缓存的使用&quot;">​</a></h2><ul><li>开启全局缓存</li></ul><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 开启二级缓存总开关 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">setting</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cacheEnabled&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>开启 Mapper.xml 的二级缓存</li></ul><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!--</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	开启mapper下的namespace的二级缓存,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	cache标签中的所有属性都是可选的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  eviction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;FIFO&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  flushInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;60000&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;512&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  readOnly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>cache 标签的属性</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>eviction: 缓存的回收策略, 默认的是 LRU</span></span>
<span class="line"><span> LRU – 最近最少使用的:移除最长时间不被使用的对象。</span></span>
<span class="line"><span> FIFO – 先进先出:按对象进入缓存的顺序来移除它们。</span></span>
<span class="line"><span> SOFT – 软引用:移除基于垃圾回收器状态和软引用规则的对象。</span></span>
<span class="line"><span> WEAK – 弱引用:更积极地移除基于垃圾收集器状态和弱引用规则的对象。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>flushInterval: 缓存刷新间隔, 默认不清空</span></span>
<span class="line"><span> 缓存多长时间清空一次, 设置一个毫秒值</span></span>
<span class="line"><span></span></span>
<span class="line"><span>readOnly: 是否只读, 默认false</span></span>
<span class="line"><span> true: 只读, mybatis认为所有从缓存中获取数据的操作都是只读操作, 不会修改数据。mybatis为了加快获取速度, 直接就会将数据在缓存中的引用交给用户。不安全, 速度快</span></span>
<span class="line"><span> false: 非只读, mybatis觉得获取的数据可能会被修改。mybatis会利用序列化&amp;反序列的技术克隆一份新的数据给你。安全, 速度慢。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>size: 缓存存放多少元素;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>type: 指定自定义缓存的全类名;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="_7-缓存原理图" tabindex="-1">7.缓存原理图 <a class="header-anchor" href="#_7-缓存原理图" aria-label="Permalink to &quot;7.缓存原理图&quot;">​</a></h2><p><img src="https://fang-kang.gitee.io/blog-img/mybatis/1.png#id=uZShE&amp;originHeight=402&amp;originWidth=702&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none" alt="" data-fancybox="gallery"></p><h2 id="_8-mybatis-整合-ehcache" tabindex="-1">8.MyBatis 整合 ehcache <a class="header-anchor" href="#_8-mybatis-整合-ehcache" aria-label="Permalink to &quot;8.MyBatis 整合 ehcache&quot;">​</a></h2><ol><li>导入第三方缓存 jar 包和与第三方缓存整合的适配包</li></ol><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;net.sf.ehcache&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;ehcache-web&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;2.0.4&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">optional</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">optional</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ol start="2"><li>mapper.xml 中使用自定义缓存</li></ol><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cache</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.mybatis.caches.ehcache.EhcacheCache&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,25),p=[e];function t(h,r,k,c,d,o){return i(),a("div",null,p)}const b=s(l,[["render",t]]);export{E as __pageData,b as default};
